# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flwr.proto import driver_pb2 as flwr_dot_proto_dot_driver__pb2


class DriverStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetClients = channel.unary_unary(
                '/flwr.proto.Driver/GetClients',
                request_serializer=flwr_dot_proto_dot_driver__pb2.GetClientsRequest.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_driver__pb2.GetClientsResponse.FromString,
                )
        self.CreateTasks = channel.unary_unary(
                '/flwr.proto.Driver/CreateTasks',
                request_serializer=flwr_dot_proto_dot_driver__pb2.CreateTasksRequest.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_driver__pb2.CreateTasksResponse.FromString,
                )
        self.GetResults = channel.unary_unary(
                '/flwr.proto.Driver/GetResults',
                request_serializer=flwr_dot_proto_dot_driver__pb2.GetResultsRequest.SerializeToString,
                response_deserializer=flwr_dot_proto_dot_driver__pb2.GetResultsResponse.FromString,
                )


class DriverServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetClients(self, request, context):
        """Return a list of clients.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTasks(self, request, context):
        """Create one or more tasks
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetResults(self, request, context):
        """Get task results
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DriverServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetClients': grpc.unary_unary_rpc_method_handler(
                    servicer.GetClients,
                    request_deserializer=flwr_dot_proto_dot_driver__pb2.GetClientsRequest.FromString,
                    response_serializer=flwr_dot_proto_dot_driver__pb2.GetClientsResponse.SerializeToString,
            ),
            'CreateTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTasks,
                    request_deserializer=flwr_dot_proto_dot_driver__pb2.CreateTasksRequest.FromString,
                    response_serializer=flwr_dot_proto_dot_driver__pb2.CreateTasksResponse.SerializeToString,
            ),
            'GetResults': grpc.unary_unary_rpc_method_handler(
                    servicer.GetResults,
                    request_deserializer=flwr_dot_proto_dot_driver__pb2.GetResultsRequest.FromString,
                    response_serializer=flwr_dot_proto_dot_driver__pb2.GetResultsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'flwr.proto.Driver', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Driver(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetClients(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Driver/GetClients',
            flwr_dot_proto_dot_driver__pb2.GetClientsRequest.SerializeToString,
            flwr_dot_proto_dot_driver__pb2.GetClientsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Driver/CreateTasks',
            flwr_dot_proto_dot_driver__pb2.CreateTasksRequest.SerializeToString,
            flwr_dot_proto_dot_driver__pb2.CreateTasksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/flwr.proto.Driver/GetResults',
            flwr_dot_proto_dot_driver__pb2.GetResultsRequest.SerializeToString,
            flwr_dot_proto_dot_driver__pb2.GetResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
